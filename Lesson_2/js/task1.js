/*
    1. Объясните почему код даёт именно такие результаты?
        Пример 1:
            let a = 1, b = 1, c, d;
            c = ++a
            alert(c); //ответ: 2

        Пример 2:
            d = b++;
            alert(d); //ответ: 1

        Пример 3:
            c = 2 + ++a;
            alert(c); //ответ: 5

        Пример 4:
            d = 2 + b++;
            alert(d); //ответ: 4
            alert(a); //3
            alert(b); //3


        Ответы:
            1) ++ всегда прибавляет 1 к переменной, при этом если стоит перед переменной, то сначала прибавляет, а после возвращает её

            2) если ++ стоит после переменной, то сначала возвращает её значение, а потом прибавляет 1. Для проверки можно после операции присваивания d = b++ выполнить alert(b) и ответом будет 2, хотя d = 1

            3) переменная "a" уже была изменена и на данный момент a = 2, таким образом упростим
            c = 2 + ++a   =>   c = 2 + (a + 1)   =>   c = 2 + (2 + 1)   =>   c = 5

            4) в этом примере нужно объяснить 3 переменных:
                ("b" и "d"): d = 2 + b++   =>   b до этого была равна 2 и т.к. используется ++ после переменной, то
                    =>   d = 2 + 2   =>   d = 4 (ну а b после этого будет равна 3)
                a) изначально a = 1, при этом с данной переменной ++ выполнили 2 раза, поэтому
                    a = a + 1 + 1

            (ответы указаны в такой форме, т.к. в задании не говорилось выводить их на экран, да и так проще будет разобраться, чем писать Вам код)
*/
